# Generated by Django 3.0.5 on 2020-04-18 20:21

import calendarweek.calendarweek
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('chronos', '0013_event_title_optional'),
    ]

    operations = [
        migrations.CreateModel(
            name='ExtraLesson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('extended_data', django.contrib.postgres.fields.jsonb.JSONField(default=dict, editable=False)),
                ('week', models.IntegerField(default=calendarweek.calendarweek.CalendarWeek.current_week, verbose_name='Week')),
                ('comment', models.CharField(blank=True, max_length=255, null=True, verbose_name='Comment')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='extralesson',
            name='groups',
            field=models.ManyToManyField(related_name='extra_lessons', to='core.Group', verbose_name='Groups'),
        ),
        migrations.AddField(
            model_name='extralesson',
            name='period',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='extra_lessons', to='chronos.TimePeriod'),
        ),
        migrations.AddField(
            model_name='extralesson',
            name='room',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='extra_lessons', to='chronos.Room', verbose_name='Room'),
        ),
        migrations.AddField(
            model_name='extralesson',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='extra_lessons', to='chronos.Subject', verbose_name='Subject'),
        ),
        migrations.AddField(
            model_name='extralesson',
            name='teachers',
            field=models.ManyToManyField(related_name='extra_lessons_as_teacher', to='core.Person', verbose_name='Teachers'),
        ),
    ]
