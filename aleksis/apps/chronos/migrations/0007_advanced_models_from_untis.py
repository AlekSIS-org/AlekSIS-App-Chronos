# Generated by Django 3.0.2 on 2020-03-08 13:49

import colorfield.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('chronos', '0006_extended_data'),
    ]

    operations = [
        migrations.CreateModel(
            name='Absence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('extended_data', django.contrib.postgres.fields.jsonb.JSONField(default=dict, editable=False)),
                ('datefrom', models.DateField(null=True, verbose_name='Effective start date of absence')),
                ('dateto', models.DateField(null=True, verbose_name='Effective end date of absence')),
                ('periodfrom', models.IntegerField(null=True, verbose_name='Effective start period of absence')),
                ('periodto', models.IntegerField(null=True, verbose_name='Effective end period of absence')),
                ('comment', models.TextField(verbose_name='Comment')),
            ],
            options={
                'verbose_name': 'Absence',
                'ordering': ['datefrom'],
            },
        ),
        migrations.CreateModel(
            name='AbsenceReason',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('extended_data', django.contrib.postgres.fields.jsonb.JSONField(default=dict, editable=False)),
                ('title', models.CharField(max_length=50, verbose_name='Title')),
                ('description', models.TextField(verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Absence reason',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('extended_data', django.contrib.postgres.fields.jsonb.JSONField(default=dict, editable=False)),
                ('title', models.CharField(max_length=50, verbose_name='Title')),
                ('datefrom', models.DateField(null=True, verbose_name='Effective start date of event')),
                ('dateto', models.DateField(null=True, verbose_name='Effective end date of event')),
                ('timefrom', models.DateTimeField(null=True, verbose_name='Effective start time of event')),
                ('timeto', models.DateTimeField(null=True, verbose_name='Effective end time of event')),
            ],
            options={
                'verbose_name': 'Events',
                'ordering': ['datefrom'],
            },
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('extended_data', django.contrib.postgres.fields.jsonb.JSONField(default=dict, editable=False)),
                ('date', models.DateField(null=True, verbose_name='Date of exam')),
                ('periodfrom', models.IntegerField(null=True, verbose_name='Effective start period of exam')),
                ('periodto', models.IntegerField(null=True, verbose_name='Effective end period of exam')),
                ('title', models.CharField(max_length=50, verbose_name='Title')),
                ('comment', models.TextField(verbose_name='Comment')),
            ],
            options={
                'verbose_name': 'Exam',
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='Holiday',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('extended_data', django.contrib.postgres.fields.jsonb.JSONField(default=dict, editable=False)),
                ('datefrom', models.DateField(null=True, verbose_name='Effective start date of holidays')),
                ('dateto', models.DateField(null=True, verbose_name='Effective end date of holidays')),
                ('comments', models.TextField(verbose_name='Comments')),
            ],
            options={
                'verbose_name': 'Holiday',
                'ordering': ['datefrom'],
            },
        ),
        migrations.CreateModel(
            name='SupervisionArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('extended_data', django.contrib.postgres.fields.jsonb.JSONField(default=dict, editable=False)),
                ('name', models.CharField(max_length=10, verbose_name='Short name')),
                ('longname', models.CharField(max_length=50, verbose_name='Long name')),
                ('colour_fg', colorfield.fields.ColorField(default='#FFFFFF', max_length=18)),
                ('colour_bg', colorfield.fields.ColorField(default='#FFFFFF', max_length=18)),
            ],
            options={
                'verbose_name': 'Supervision areas',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TimetableWidget',
            fields=[
            ],
            options={
                'verbose_name': 'Timetable widget',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('core.dashboardwidget',),
        ),
        migrations.AddIndex(
            model_name='holiday',
            index=models.Index(fields=['datefrom', 'dateto'], name='chronos_hol_datefro_36520a_idx'),
        ),
        migrations.AddField(
            model_name='exam',
            name='lesson',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson', to='chronos.Lesson'),
        ),
        migrations.AddField(
            model_name='event',
            name='absence_reason',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='absence_reason', to='chronos.AbsenceReason', verbose_name='Absence reason'),
        ),
        migrations.AddField(
            model_name='event',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group', to='core.Group', verbose_name='Group'),
        ),
        migrations.AddField(
            model_name='event',
            name='periodfrom',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='periodfrom', to='chronos.TimePeriod', verbose_name='Effective start period of event'),
        ),
        migrations.AddField(
            model_name='event',
            name='periodto',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='periodto', to='chronos.TimePeriod', verbose_name='Effective end period of event'),
        ),
        migrations.AddField(
            model_name='event',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subject', to='chronos.Subject', verbose_name='Subject'),
        ),
        migrations.AddField(
            model_name='absence',
            name='person',
            field=models.ManyToManyField(related_name='fk_person', to='core.Person'),
        ),
        migrations.AddField(
            model_name='absence',
            name='reason',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reason', to='chronos.AbsenceReason'),
        ),
        migrations.AddIndex(
            model_name='exam',
            index=models.Index(fields=['periodfrom', 'periodto'], name='chronos_exa_periodf_2f686a_idx'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['periodfrom', 'periodto'], name='chronos_eve_periodf_1fa12c_idx'),
        ),
        migrations.AddIndex(
            model_name='absence',
            index=models.Index(fields=['datefrom', 'dateto'], name='chronos_abs_datefro_d55b67_idx'),
        ),
    ]
